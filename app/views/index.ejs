<!DOCTYPE html>
<html lang="de">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="author" content="Tino Schroeter">
    <link rel="shortcut icon" href="https://bos.tino.sh/static/favicon.ico">
    <title>Podcast</title>
    <style>
@font-face {
  font-family: IBM;
  src: url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@500&display=swap') format("woff2"),
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
}
body {
  margin: 5;
  min-height: 100vh;
  color:  #e1e1e1;
  background: #1b1b25;
  font-family: "IBM", monospace;
  font-size: calc(0.2rem + 1.6vw);
  line-height: 2ch;
}
main {
  width: 90%;
  max-width: 1260px;
  margin: 0 auto;
  padding: 10px;
}
ul {
  list-style: none;
  padding: 5px 5px 5px 30px;
  margin: 0;
}
.keyword {
  color:#e66170; 
  font-weight:bold;
}
.function {
  font-weight:bold;
}
.operator,
.punctuation {
  color:#d2cd86;
}
.string {
  color:#00c4c4;
  font-size: calc(0.2rem + 1.4vw);
}
    </style>
  </head>
  <body>
    <audio id="audio">
      <source id="audioSource" src="<%= result[result.length -1].file + ".mp3" %>"></source>
    </audio>

    <main>
      </span><span class="keyword">const</span> <span class="function">podcastPlayer</span> <span class="operator">=</span> <span class="punctuation">(</span><span class="parameter">controls</span><span class="punctuation">,</span> </span><span class="parameter" id="control">pause</span><span class="punctuation">)</span> <span class="operator">=&gt;</span> <span class="keyword">{</span></br>

      <span class="keyword">const</span> <span class="punctuation">[</span><span class="string" onclick="playAudio()">playAudio</span>, <span class="string" onclick="pauseAudio()">pauseAudio</span>, <span class="string" onclick="reset()">reset</span><span class="punctuation">]</span> <span class="operator">=</span> controls<span class="keyword">;</span></br></br>

      <span class="keyword">const</span> time<span class="punctuation"> = "</span><span id="time"></span><span class="punctuation">"</span></br>
      <span class="keyword">const</span> files<span class="punctuation"> = [</span>
      <ul style="list-style: none" id="list">
        <% result.reverse().map((item) => { %>
        <li><a class="string" href="#" data-value="<%= item.file + ".mp3" %>">    <span class="punctuation">"</span><%= item.title %><span class="punctuation">",</span></a></li>
        <% }) %>
      </ul>
      <span class="punctuation">&nbsp;&nbsp;];</span></br></br>
      <span class="keyword">const</span> help<span class="punctuation"> = "</span><span class="string">curl https://podcast.tino.sh/upload<span<span class="punctuation">"<span class="keyword">;</span></span></br>
          <span class="keyword">const</span> gitHub<span class="punctuation"> = "</span><a class="string" href="https://github.com/tinoschroeter/podcast">https://github.com/tinoschroeter/podcast</a><span class="punctuation">"<span class="keyword">;</span></span></br>
          <span class="keyword">const</span> downloading<span class="punctuation"> = </span><span class="string" id="download">0</span><span class="keyword">;</span></br>
          <span class="keyword">};</span>
    </main>

    <script>
      const download = document.getElementById("download");
      const audio = document.getElementById("audio");
      const time = document.getElementById("time");
      const source = document.getElementById("audioSource");

      const data = localStorage.getItem('playStatus');
      const playStatus = data !== null ? JSON.parse(data) : { };

      const setTime = () => {
            if(playStatus[source.getAttribute('src')]) {
                const minutes = playStatus[source.getAttribute('src')];
                audio.currentTime = minutes;
                }
            }
            setTime(); 

            setInterval(() => {
                    fetch("/count")
                      .then(res => res.json())
                      .then(res => download.innerText = res.count);

                     const minute = Math.floor(audio.currentTime / 60);
                     const second = Math.round(audio.currentTime % 60);

                     const addZero = val => val < 10 ? `0${val}` : val;
                     time.innerText = `${addZero(minute)}:${addZero(second)}`;

                     playStatus[source.getAttribute('src')] = audio.currentTime;
                     localStorage.setItem('playStatus', JSON.stringify(playStatus));
                  }, 1000);

            const control = document.getElementById("control");
            list.onclick = (e) => {
                    e.preventDefault();
                    const elm = e.target;
                    source.src = elm.getAttribute("data-value");

                    audio.load();
                    audio.play();
                    audio.currentTime = playStatus[elm.getAttribute("data-value")];
                    control.innerText = "play"
                  };

            const playAudio = () => {
                    control.innerText = "play"
                    audio.play();
                    setTime();
                  };
            const pauseAudio = () => {
                    control.innerText = "pause"
                    audio.pause();
                  };
            const reset = () => {
                    audio.currentTime = 0;
                  };
    </script>
  </body>
</html>
